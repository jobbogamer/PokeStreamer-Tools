local find_all_locations = true

rom_base = 0x02000000
needle = { 0x4e, 0x23, 0xd9, 0x33 } -- { 0x88, 0x51, 0x37, 0xe2,  } --  } --, 0x00, 0x00, 0xa4, 0x3c, 0x98, 0x00, 0x00, 0x00, 0x1c, 0x8e, 0xcc, 0x61, 0xb4, 0x01, 0x00, 0x00, 0x60, 0x41, 0x00, 0x02, 0x07, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x21, 0x00, 0x2d, 0x00, 0x4d, 0x00, 0x19, 0x18, 0x28, 0x23, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x46, 0x7b, 0x30, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x2d, 0x01, 0x32, 0x01, 0x33, 0x01, 0x35, 0x01, 0x39, 0x01, 0x3c, 0x01, 0x33, 0x01, 0x3e, 0x01, 0x2b, 0x01, 0xff, 0xff, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x01, 0x53, 0x01, 0x56, 0x01, 0x48, 0x01, 0x45, 0x01, 0x52, 0x01, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x03, 0x08, 0x00, 0x00, 0xba, 0x0b, 0x00, 0x04, 0x85, 0x0c, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x12, 0x00, 0x1c, 0x00, 0x0d, 0x00, 0x13, 0x00, 0x0f, 0x00, 0x0e, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x08, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xed, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, }
--needle = { 0x83, 0x94, 0x34, 0x00, 0x00, 0x00, 0xaa, 0x9d, 0x52, 0x4b, 0x2b, 0xe2, 0x41, 0xd6, 0xe5, 0x97, 0x4d, 0xf2, 0x12, 0xb5, 0x7a, 0x37, 0x09, 0x81, 0x76, 0xf5, 0xfd, 0x1f, 0xc4, 0xc6, 0x51, 0x21, 0x54, 0xf4, 0x27, 0x7e, 0x15, 0x22, 0xe7, 0xa2, 0xe2, 0x93, 0xcf, 0xb9, 0x75, 0x9d, 0xa5, 0xce, 0x10, 0xfe, 0x43, 0x21, 0x32, 0xcc, 0x56, 0x86, 0x2b, 0x6b, 0xdc, 0x74, 0x29, 0xbd, 0xde, 0x6f, 0x47, 0x07, 0xb1, 0x9e, 0x7d, 0x8c, 0x52, 0xcc, 0xd5, 0xaa, 0xe7, 0x17, 0x73, 0x6b, 0x12, 0xe2, 0x7f, 0xff, 0x19, 0x95, 0x41, 0xb1, 0xa9, 0xd0, 0x3c, 0xbf, 0x48, 0xb5, 0xae, 0x96, 0x33, 0xcb, 0xd9, 0x5a, 0x7a, 0xc3, 0xbd, 0x0c, 0x28, 0x00, 0x3d, 0x8b, 0xb5, 0x91, 0xa1, 0xda, 0x61, 0xb1, 0x27, 0xad, 0xe1, 0x39, 0xd4, 0x62, 0x44, 0x3f, 0x80, 0xdc, 0x06, 0x11, 0x0c, 0xfd, 0x0a, 0x21, 0xad, 0xdb, 0x65, 0x0b, 0xb1, 0x5e, 0x30, 0x57 }

rbyte = memory.readbyteunsigned
for i=0,0xFFFFFF do
    byte = rbyte(rom_base + i)
    if byte == needle[1] then
        found_needle = true
        for j = 1, #needle do
            bbyte = rbyte(rom_base + i + j - 1)
            if bbyte ~= needle[j] then
                found_needle = false
                break
            end
        end

        if found_needle then
            print(string.format("0x%08x", i + rom_base))

            if find_all_locations then
                found_needle = false
            else
                return
            end
        end
    end
end

print("done")
